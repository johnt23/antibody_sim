{
    "collab_server" : "",
    "contents" : "# plot_results.R\n#  Created by John Trochta\n#  This code loads in results from simulation runs and plots summary figures\n\nlibrary(dplyr)\n\noptions(scipen=9)\nsetwd(here::here())\n\n# dir.ls <- c(\"simulations/Scenario_ignore_disease_multinom_runs.csv\",\n#             \"simulations/Scenario_ignore_disease_runs.csv\")\n# scenario.names <- c(\"Multinomial\\nlikelihood\",\n#                     \"Binomial\\nlikelihood\")\n \n# dir.ls <- c(\"simulations/Scenario_incorporate_seroprevalence_runs.csv\",\n#             \"simulations/om_base_jan2021/Scenario_base_runs.csv\"\n#             )\n# scenario.names <- c(\"Incorporate serorpevalence (Mar 2021)\",\n#                     \"Incorporate serorpevalence (Jan 2021)\")\n\n# dir.ls <- c(\"simulations/Scenario_ignore_disease_runs.csv\",\n#             \"simulations/Scenario_ignore_disease_greater survival changes_runs.csv\")\n# scenario.names <- c(\"Ignore disease (ver 1)\",\n#                     \"Ignore disease (ver 2)\")\n\nbase.om <- \"simulations/base OM_age specific mixing/\"\n\ndir.ls <- c(\"Scenario_ignore_disease_runs.csv\",\n            \"Scenario_incorporate_infection_prevalence_runs.csv\",\n            \"Scenario_incorporate_seroprevalence_runs.csv\",\n            \"Scenario_small_sample_size_runs.csv\",\n            \"Scenario_early_mixing_of_susceptible_runs.csv\",\n            \"Scenario_age_specific_mixing_ignored_runs.csv\",\n            \"Scenario_time_varying_background_mortality_runs.csv\",\n            \"Scenario_time_varying_background_mortality_ignore_disease_runs.csv\",\n            \"Scenario_timevarying_disease_mortality_recovery_runs.csv\")\ndir.ls <- paste0(base.om,dir.ls)\n\nscenario.names <- c(\"Ignore disease\",\n                    \"Incorporate\\ninfection\\nprevalence\",\n                    \"Incorporate\\nseroprevalence\",\n                    \"Small\\nsample size\",\n                    \"Early mixing\\nof susceptibles\",\n                    \"Age-specific\\nmixing\\nignored\",\n                    \"Time-varying\\nbackground\\nmortality\",\n                    \"Time-varying\\nbackground\\nmortality and\\ndisease ignored\",\n                    \"Time-varying\\ndisease\\nmortality/recovery\")\n\n# dir.ls <- c(\"simulations/base_age specific mixing/Scenario_time_varying_disease_mortality_recovery_greater survival changes_runs.csv\")\n# scenario.names <- c(\"Time-varying disease mortality ver2\")\n\n# Save em_runs to .csv in OM#_runs folder\nsim.outputs <- data.frame(scenario=scenario.names[1],\n                          read.csv(paste0(here::here(\"results/\"),dir.ls[1]),stringsAsFactors=FALSE))\n\n\nfor(i in 2:length(dir.ls)){\n  temp <- data.frame(scenario=scenario.names[i],\n                            read.csv(paste0(here::here(\"results/\"),dir.ls[i]),stringsAsFactors=FALSE))\n  # sim.outputs <- rbind(sim.outputs,select(temp,-year))\n  sim.outputs <- rbind(sim.outputs,temp)\n  rm(temp)\n}\n\n# Check (and remove) non-converged models\nnonconverged <- sim.outputs[sim.outputs$convergence!=0,]\nsim.outputs <- sim.outputs[sim.outputs$convergence==0,]\n\nconvergence.check <- sim.outputs %>% group_by(scenario,seed) %>% summarize(con.rate = all(convergence==0)) \nconvergence.rate <- convergence.check %>% group_by(scenario) %>% summarize(rate=sum(con.rate,na.rm = TRUE)/500)\n\n##################################\n# Plotting Relative Error of Key outputs (SSB, REC, Infection rates)\n##################################\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gtable)\nlibrary(foreach)\n\n# Remove NAs, but come back and check why there are NAs in the first place....\nsim.outputs <- sim.outputs[!is.na(sim.outputs$scenario),]\n\n# Factor scenario to arrange names of scenario\nsim.outputs$scenario_fac <- factor(sim.outputs$scenario,levels=scenario.names)\n\n# Scenarios where no disease is estimated (and should be ignored in calculating errors for disease-related quanities)\nscen.no.dis <- c(\"Ignore disease\",\"Incorporate\\ninfection\\nprevalence\",\"Time-varying\\nbackground\\nmortality and\\ndisease ignored\")\n\n# Calculate relative error for SSB and Recruitment\nrel.err <- sim.outputs %>% group_by(scenario_fac,seed) %>% transmute('Year'=1:length(true_ssb),\n                                                    'SB'=(est_ssb - true_ssb)/true_ssb,\n                                                    'Recruitment'=(est_rec - true_rec)/true_rec,\n                                                    'Infection rate'=ifelse(scenario_fac %in% scen.no.dis,NA,(est_infection-true_infection)))\n\n# Melt the data frame\nrel.err.2 <- melt(as.data.frame(rel.err),id=1:3)\n\n# Calc 95% quantiles for each year\nrel.err.3 <- rel.err.2 %>% group_by(scenario_fac,variable,Year) %>% summarize(Q.025=quantile(value,probs=0.025,na.rm=TRUE),\n                                                                 Q.25=quantile(value,probs=0.25,na.rm=TRUE),\n                                                                 Q.50=quantile(value,probs=0.5,na.rm=TRUE),\n                                                                 Q.75=quantile(value,probs=0.75,na.rm=TRUE),\n                                                                 Q.975=quantile(value,probs=0.975,na.rm=TRUE)) %>%\n  filter(!is.na(Q.50))\n\nrel.err.3$scenario <- sapply(rel.err.3$scenario_fac,FUN=function(x) paste(strwrap(x,width=25),collapse=\"\\n\"))\n\n# Now plot\nfont.size <- 12\n\ndat.2.plot <- filter(rel.err.3,scenario_fac %in% scenario.names[1:5])\n\nre.plot <- ggplot(data=dat.2.plot,aes(x=Year,y=Q.50)) + \n  geom_ribbon(aes(ymin=Q.025,ymax=Q.975),fill=\"grey70\")+\n  geom_ribbon(aes(ymin=Q.25,ymax=Q.75),fill=\"grey85\")+\n  geom_hline(yintercept=0,linetype=\"dashed\")+\n  geom_line(size=1)+\n  coord_cartesian(ylim=c(-1,1))+\n  facet_grid(variable~scenario_fac,switch=\"y\", drop=T)+\n  scale_x_continuous(limits=c(0,50),breaks=c(0,50),expand=c(0.05,0.05))+\n  theme_classic()+\n  theme(strip.background = element_blank(),\n        panel.border=element_rect(fill=NA),\n        plot.title = element_text(hjust = 0.5),\n        strip.text.y = element_text(size=font.size,vjust = 0),\n        strip.text.x = element_text(size=font.size),\n        strip.placement = \"outside\",\n        axis.text.y = element_text(size=font.size-2),\n        axis.text.x = element_text(size=font.size-2),\n        axis.ticks.x= element_line(color=\"black\"),\n        # axis.title.y = element_text(size=font.size+2),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(size=font.size),\n        plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n        panel.spacing = unit(0.25, \"lines\"),\n        legend.position =\"none\")\n\n# Remove empty facets\ngrob <- ggplotGrob(re.plot)\nidx <- which(grob$layout$name %in% c(\"panel-3-1\", \"panel-3-2\", \"panel-3-8\"));\nfor (i in idx) grob$grobs[[i]] <- nullGrob()\n\n# Find and move x axes up of empty facets\nidx <- which(grob$layout$name %in% c(\"axis-b-1\", \"axis-b-2\", \"axis-b-8\"));\ngrob$layout[idx, c(\"t\", \"b\")] <- grob$layout[idx, c(\"t\", \"b\")] - c(2, 2, 2);\n\n# Find and move y axes right to infection rate facets\nidx <- which(grob$layout$name %in% c(\"axis-l-3\",\"strip-l-3\"));\ngrob$layout[idx, c(\"l\",\"r\")] <- grob$layout[idx, c(\"l\",\"r\")] + c(4,5);\n\n# Remove x axis label\nidx <- which(grob$layout$name %in% c(\"axis-b-2\"));\nfor (i in idx) grob$grobs[[i]] <- nullGrob()\n\ngrid.newpage();\ngrid.draw(grob);\n\nggsave(plot=grob,filename=here::here(paste0(\"results/figures/Figure_time trajectories of relative error_set1_aug2021.png\")),\n       width=8, height=5, units=\"in\",dpi=600)\n# ggsave(plot=grob,filename=here::here(paste0(\"results/figures/Figure_time trajectories of relative error_set1.png\")),\n#        width=12, height=5, units=\"in\",dpi=600)\n\n\ndat.2.plot <- filter(rel.err.3,scenario_fac %in% scenario.names[c(3,6:9)])\nre.plot <- ggplot(data=dat.2.plot,aes(x=Year,y=Q.50)) + \n  geom_ribbon(aes(ymin=Q.025,ymax=Q.975),fill=\"grey70\")+\n  geom_ribbon(aes(ymin=Q.25,ymax=Q.75),fill=\"grey85\")+\n  geom_hline(yintercept=0,linetype=\"dashed\")+\n  geom_line(size=1)+\n  coord_cartesian(ylim=c(-1,1))+\n  facet_grid(variable~scenario_fac,switch=\"y\", drop=T)+\n  scale_x_continuous(limits=c(0,50),breaks=c(0,50),expand=c(0.05,0.05))+\n  theme_classic()+\n  theme(strip.background = element_blank(),\n        panel.border=element_rect(fill=NA),\n        plot.title = element_text(hjust = 0.5),\n        strip.text.y = element_text(size=font.size),\n        strip.text.x = element_text(size=font.size),\n        strip.placement = \"outside\",\n        axis.text.y = element_text(size=font.size-2),\n        axis.text.x = element_text(size=font.size-2),\n        axis.ticks.x= element_line(color=\"black\"),\n        # axis.title.y = element_text(size=font.size+2),\n        axis.title.y = element_blank(),\n        axis.title.x = element_text(size=font.size),\n        plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n        panel.spacing = unit(0.25, \"lines\"),\n        legend.position =\"none\")\n\n# Remove empty facets\ngrob <- ggplotGrob(re.plot)\nidx <- which(grob$layout$name %in% c(\"panel-3-4\"));\nfor (i in idx) grob$grobs[[i]] <- nullGrob()\n\n# Find and move x axes up of empty facets\nidx <- which(grob$layout$name %in% c(\"axis-b-4\"));\ngrob$layout[idx, c(\"t\", \"b\")] <- grob$layout[idx, c(\"t\", \"b\")] - c(2);\n\ngrid.newpage();\ngrid.draw(grob);\n\nggsave(plot=grob,filename=here::here(paste0(\"results/figures/Figure_time trajectories of relative error_set2_aug2021.png\")),\n       width=8, height=5, units=\"in\",dpi=600)\n\n##################################\n# MAREs of SSB, Recruitment, and infection\n##################################\nrel.err <- sim.outputs %>% group_by(scenario,seed) %>% \n  transmute(Year=1:length(true_ssb),\n           ssb=(est_ssb - true_ssb)/true_ssb,\n           rec=(est_rec - true_rec)/true_rec,\n           inf=ifelse(scenario_fac %in% scen.no.dis,NA,(est_infection-true_infection)))\n\nmare <- rel.err %>% group_by(scenario,Year) %>%\n  summarise(mare.ssb = median(abs(ssb)),\n    mare.rec = median(abs(rec)),\n    mare.inf = median(abs(inf)))\n\nmare.sum.derived <- mare %>% group_by(scenario) %>%\n  summarise(finalyr.ssb = mare.ssb[Year==max(Year)],\n            median.ssb = median(mare.ssb),\n            median.rec = median(mare.rec),\n            median.inf = median(mare.inf[Year %in% 2:(max(Year)-1)]))\n\n##################################\n# Probabilities of estimated biomass exceeding true biomass\n##################################\n\nthreshold <- 0.4\n\n# Calculate relative error for SSB and Recruitment\nP.risk <- sim.outputs %>% group_by(scenario,seed) %>% \n  transmute('Year'=1:length(true_ssb),\n            'Binary.above'=est_ssb > (true_ssb + threshold*true_ssb),\n            'Binary.below'=est_ssb < (true_ssb - threshold*true_ssb))\n\nP.risk <- P.risk %>% group_by(scenario,Year) %>% \n  summarise(P.above=sum(Binary.above)/length(Binary.above),\n            #length.Pabove = length(Binary.above),\n            P.below=sum(Binary.below)/length(Binary.below))\n\nP.summary.0.4 <- P.risk %>% group_by(scenario) %>% \n  summarise(median.P.above.0.4=median(P.above),\n            finalyr.P.above.0.4=P.above[Year==max(Year)],\n            median.P.below.0.4=median(P.below),\n            finalyr.P.below.0.4=P.below[Year==max(Year)])\n\nthreshold <- 0.1\nP.risk <- sim.outputs %>% group_by(scenario,seed) %>% \n  transmute('Year'=1:length(true_ssb),\n            'Binary.above'=est_ssb > (true_ssb + threshold*true_ssb),\n            'Binary.below'=est_ssb < (true_ssb - threshold*true_ssb))\nP.risk <- P.risk %>% group_by(scenario,Year) %>% \n  summarise(P.above=sum(Binary.above)/length(Binary.above),\n            P.below=sum(Binary.below)/length(Binary.below))\nP.summary.0.1 <- P.risk %>% group_by(scenario) %>% \n  summarise(median.P.above.0.1=median(P.above),\n            finalyr.P.above.0.1=P.above[Year==max(Year)],\n            median.P.below.0.1=median(P.below),\n            finalyr.P.below.0.1=P.below[Year==max(Year)])\n\n##################################\n# Stats for describing bias in SB and R based on RE\n##################################\nthreshold <- 0\nP.risk <- sim.outputs %>% group_by(scenario,seed) %>% \n  transmute('Year'=1:length(true_ssb),\n            'SB.above'=est_ssb > (true_ssb + threshold*true_ssb),\n            'SB.below'=est_ssb < (true_ssb - threshold*true_ssb),\n            'R.above'=est_rec > (true_rec + threshold*true_rec),\n            'R.below'=est_rec < (true_rec - threshold*true_rec))\nP.risk <- P.risk %>% group_by(scenario,Year) %>% \n  summarise(P.SB.above=sum(SB.above)/length(SB.above),\n            P.SB.below=sum(SB.below)/length(SB.below),\n            P.R.above=sum(R.above)/length(R.above),\n            P.R.below=sum(R.below)/length(R.below))\nP.summary.0.0 <- P.risk %>% group_by(scenario) %>% \n  summarise(median.SB.above.0.0=median(P.SB.above),\n            finalyr.SB.above.0.0=P.SB.above[Year==max(Year)],\n            median.SB.below.0.0=median(P.SB.below),\n            finalyr.SB.below.0.0=P.SB.below[Year==max(Year)],\n            median.R.above.0.0=median(P.R.above),\n            finalyr.R.above.0.0=P.R.above[Year==max(Year)],\n            median.R.below.0.0=median(P.R.below),\n            finalyr.R.below.0.0=P.R.below[Year==max(Year)])\nwrite.csv(P.risk,file=here::here(paste0(\"results/figures/Annual_Bias in SB and R by scenario.csv\")),\n          row.names=FALSE)\nwrite.csv(P.summary.0.0,file=here::here(paste0(\"results/figures/Summary_Bias in SB and R by scenario.csv\")),\n          row.names=FALSE)\n##################################\n# Load and plot key parameters, particularly regarding disease\n##################################\n# Read in parameter estimates\n# dir.ls <- c(\"om1_large samp_runs\",\n#             \"om1_large samp_runs\",\n#             \"om1_small samp_runs\",\n#             \"om1_young sus vulnerable_runs\")\n# \n# file.ls <- c(\"vhs_asa_em1_parameters.RDS\",\n#              \"vhs_asa_em1_no disease est_parameters.RDS\",\n#              \"vhs_asa_em1_parameters.RDS\",\n#              \"vhs_asa_em1_young susceptibles mixing_parameters.RDS\")\n\ndir.ls <- c(\"ignore_disease\",\n            \"incorporate_infection_prevalence\",\n            \"incorporate_seroprevalence\",\n            \"small_sample_size\",\n            \"early_mixing_of_susceptible\",\n            \"age_specific_mixing_ignored\",\n            \"time_varying_background_mortality\",\n            \"time_varying_background_mortality_ignore_disease\",\n            \"time_varying_disease_mortality_recovery\")\ndir.ls <- paste0(base.om,dir.ls)\n\nfile.ls <- c(\"vhs_asa_em_v1_ignore_disease_parameters.RDS\",\n             \"vhs_asa_em_v1_incorporate_infection_prevalence_parameters.RDS\",\n             \"vhs_asa_em_v1_incorporate_seroprevalence_parameters.RDS\",\n             \"vhs_asa_em_v1_small_sample_size_parameters.RDS\",\n             \"vhs_asa_em_v1_early_mixing_of_susceptible_parameters.RDS\",\n             \"vhs_asa_em_v1_age_specific_mixing_ignored_parameters.RDS\",\n             \"vhs_asa_em_v1_time_varying_background_mortality_parameters.RDS\",\n             \"vhs_asa_em_v1_time_varying_background_mortality_ignore_disease_parameters.RDS\",\n             \"vhs_asa_em_v1_timevarying_disease_mortality_recovery_parameters.RDS\")\n\npar_names <- c('Recovery rate',\n               'Age 50% of susceptible mix',\n               'Age 95% of susceptible mix',\n               'Age 50% fish available to survey',\n               'Age 95% fish available to survey',\n               'Recruitment std dev',\n               'Recruitment mean')\npar_ID <- paste0(\"par_\",1:7)\n\nfor(j in 1:length(dir.ls)){\n  scen.dir <- paste0(here::here(\"results/\"),dir.ls[j])\n  setwd(scen.dir)\n  folder.ls <- list.files()[1:500] # WATCH THIS\n  est_pars <- foreach(i=1:length(folder.ls),.combine=rbind) %do% {\n    # Set WD to current simulation rseed\n    rseed = as.numeric(substring(folder.ls[i], 7))\n    #setwd(folder.ls[i])\n    if(file.exists(paste0(scen.dir,\"/\",folder.ls[i],\"/\",file.ls[j]))){\n      pars <- readRDS(paste0(scen.dir,\"/\",folder.ls[i],\"/\",file.ls[j]))\n      sel_pars <- pars$par[c(\"fix_recov_par\",\"disease_selA50\",\"disease_selA95\",\"survey_selA50\",\"survey_selA95\",\"log_sigma_R\",\"log_rbar\")]\n    }else{\n      sel_pars <- rep(NA,times=7)\n      names(sel_pars) <- c(\"fix_recov_par\",\"disease_selA50\",\"disease_selA95\",\"survey_selA50\",\"survey_selA95\",\"log_sigma_R\",\"log_rbar\")\n    }\n    \n    results <- data.frame(seed=rseed,t(sel_pars))\n    \n    results\n  }\n  \n  colnames(est_pars) <- c(\"seed\",par_ID)\n  \n  if(j==1){\n    sim_pars <- data.frame(scenario=scenario.names[j],est_pars)\n  }else{\n    sim_pars <- rbind(sim_pars,data.frame(scenario=scenario.names[j],est_pars))\n  }\n  \n}\n\n# Store truth matrix\n# Recovery rate, A50 disease, A95 disease, A50 survey sel, A95 survey sel, sigma R, mean R)\ntru_pars <- matrix(c(26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 1, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     26/(26+11), 3, 4, 3, 4, exp(0.1823216), exp(5.2),\n                     NA,         3, 4, 3, 4, exp(0.1823216), exp(5.2)),ncol=7,byrow=TRUE)\ncolnames(tru_pars) <- par_ID\ntru_pars <- data.frame(scenario=scenario.names,tru_pars)\n\n# Melt data frames\nsim_pars <- melt(as.data.frame(sim_pars),id=c(\"scenario\",\"seed\"))\ntru_pars <- melt(tru_pars,id=c(\"scenario\"))\n\n# Convert logged parameter values to normal scale\nsim_pars$value[sim_pars$variable==\"par_6\"] <- exp(sim_pars$value[sim_pars$variable==\"par_6\"])\nsim_pars$value[sim_pars$variable==\"par_7\"] <- exp(sim_pars$value[sim_pars$variable==\"par_7\"])\n\n# Calculate error\npar_abs_err <- sim_pars %>% group_by(scenario,variable,seed) %>%\n  transmute(are=abs((value-tru_pars$value[tru_pars$scenario==scenario & tru_pars$variable==variable])/tru_pars$value[tru_pars$scenario==scenario & tru_pars$variable==variable]))\n\npar_mare <- par_abs_err %>% group_by(scenario,variable) %>% summarize(mare=median(are,na.rm=TRUE))\n\n# Now re-insert names\npar_mare$variable <- par_names[match(par_mare$variable,par_ID)]\n\n# Extract only those parameters which I am presenting & cast to table\npar_mare_2 <- filter(par_mare,variable %in% c('Recovery rate','Age 50% of susceptible mix','Age 95% of susceptible mix'))\npar_mare_2 <- dcast(par_mare_2,scenario ~ variable)\n\n\n##################################\n# Combine errors for all quantities and scenarios\n##################################\nall_metrics <- left_join(left_join(par_mare_2,mare.sum.derived,by=\"scenario\"),\n                         P.summary.0.4,by=\"scenario\")\nall_metrics <- left_join(all_metrics,P.summary.0.1,by=\"scenario\")\nwrite.csv(all_metrics,file=here::here(paste0(\"results/figures/Table_performance metrics by scenario_aug2021.csv\")),\n          row.names=FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n##################################\n# EXTRA:  Check out individual replicates (for bimodal errors in estimation across simulations)\n##################################\ndir.ls <- \"no_disease_multinom\"\nfile.ls <- \"vhs_asa_em_multinom_no_disease_multinom_ver2_parameters.RDS\"\n\ndir.ls <- \"incorporate_seroprevalence\"\nfile.ls <- \"vhs_asa_em_v1_incorporate_seroprevalence_parameters.RDS\"\n\ndir.ls <- \"incorporate_seroprevalence_prior\"\nfile.ls <- \"vhs_asa_em_v1_incorporate_seroprevalence_parameters.RDS\"\n\ndir.ls <- \"om_base_jan2021\"\nfile.ls <- \"vhs_asa_em_v1_base_parameters.RDS\"\n\nseed <- \"rseed_34029\"\nscen.dir <- paste0(here::here(\"results/simulations/\"),dir.ls)\n\nsingle_est_out_3 <- readRDS(paste0(scen.dir,\"/\",seed,\"/\",file.ls))\n\n\nggplot(data=test.plot.dat,aes(x=year,y=est_ssb,group=seed,color=seed)) + geom_line()\ntrial <- filter(test.plot.dat, scenario=='Multinomial\\nlikelihood' & seed==34029)\ntrial.2 <- filter(sim.outputs, scenario=='Multinomial\\nlikelihood' & seed==66556)\ntrial.3 <- filter(sim.outputs, scenario=='Multinomial\\nlikelihood' & seed==113690)\n\nplot(trial$true_rec,type=\"l\")\nlines(x=1:50,y=trial$est_rec,col=\"red\")\nplot(trial.2$true_rec,type=\"l\")\nlines(x=1:50,y=trial.2$est_rec,col=\"red\")\nplot(trial.3$true_rec,type=\"l\")\nlines(x=1:50,y=trial.3$est_rec,col=\"red\")\n\nplot(trial.2$true_ssb,trial.2$est_ssb)\nplot(trial.2$true_ssb)\nplot(trial.2$est_ssb)\nplot(trial.2$true_rec)\nplot(trial.2$est_rec)\n\n\n##################################\n# Extra plots\n##################################\n\n# Plot only disease related parameters\ndat.4.plot <- filter(par_abs_err,variable %in% c('Recovery rate','Age 50% of susceptible mix',\n                                                   'Age 95% of susceptible mix'))\nggplot(data=dat.4.plot,aes(x=scenario,y=error)) + \n  geom_boxplot()+\n  geom_hline(yintercept=0,linetype=\"dashed\")+\n  #coord_cartesian(ylim=c(-1,1))+\n  facet_wrap(variable~.,scales=\"free_x\")+\n  theme_classic()+\n  theme(strip.background = element_blank(),\n        panel.border=element_rect(fill=NA),\n        plot.title = element_text(hjust = 0.5),\n        strip.text.y = element_text(size=font.size-2),\n        strip.text.x = element_text(size=font.size-2),\n        axis.text.y = element_text(size=font.size-2),\n        axis.text.x = element_text(size=font.size-2,angle=45,vjust=0.5),\n        axis.ticks.x= element_line(color=\"black\"),\n        # axis.title.y = element_text(size=font.size+2),\n        axis.title.y = element_blank(),\n        plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n        panel.spacing = unit(0.5, \"lines\"),\n        legend.position =\"none\")+\n  coord_flip()\nggsave(filename=here::here(paste0(\"results/figures/Figure_disease parameters absolue error.png\")),\n       width=10, height=5, units=\"in\",dpi=600)\n\n\n\n\n\n\n# Plot only survey selectivity parameters\ndat.4.plot <- filter(par_abs_err,variable %in% c('Age 50% fish available to survey',\n                                                 'Age 95% fish available to survey'))\nggplot(data=dat.4.plot,aes(x=scenario,y=error)) + \n  geom_boxplot()+\n  geom_hline(yintercept=0,linetype=\"dashed\")+\n  #coord_cartesian(ylim=c(-1,1))+\n  facet_wrap(variable~.,scales=\"free_x\")+\n  theme_classic()+\n  theme(strip.background = element_blank(),\n        panel.border=element_rect(fill=NA),\n        plot.title = element_text(hjust = 0.5),\n        strip.text.y = element_text(size=font.size-2),\n        strip.text.x = element_text(size=font.size-2),\n        axis.text.y = element_text(size=font.size-2),\n        axis.text.x = element_text(size=font.size-2,angle=45,vjust=0.5),\n        axis.ticks.x= element_line(color=\"black\"),\n        # axis.title.y = element_text(size=font.size+2),\n        axis.title.y = element_blank(),\n        plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n        panel.spacing = unit(0.5, \"lines\"),\n        legend.position =\"none\")+\n  coord_flip()\nggsave(filename=here::here(paste0(\"results/figures/Figure_survey parameters absolue error.png\")),\n       width=10, height=5, units=\"in\",dpi=600)\n",
    "created" : 1614967388676.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3926130639",
    "id" : "E01EC420",
    "lastKnownWriteTime" : 1629480682,
    "last_content_update" : 1629480682503,
    "path" : "~/IDrive-Sync/Thesis/antibody_sim/src/plot_results.R",
    "project_path" : "src/plot_results.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}